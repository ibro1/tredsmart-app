{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/@solana+wallet-adapter-react-ui@0.9.35_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.1_pqdhqpd7mugw6mwzz56jj63u4m/node_modules/@solana/wallet-adapter-react-ui/src/WalletMultiButton.tsx", "../../../node_modules/.pnpm/@solana+wallet-adapter-base-ui@0.1.2_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13__xoaee2lwisviivtm42lbcudri4/node_modules/@solana/wallet-adapter-base-ui/src/useWalletMultiButton.ts", "../../../node_modules/.pnpm/@solana+wallet-adapter-react-ui@0.9.35_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.1_pqdhqpd7mugw6mwzz56jj63u4m/node_modules/@solana/wallet-adapter-react-ui/src/BaseWalletMultiButton.tsx", "../../../node_modules/.pnpm/@solana+wallet-adapter-react-ui@0.9.35_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.1_pqdhqpd7mugw6mwzz56jj63u4m/node_modules/@solana/wallet-adapter-react-ui/src/BaseWalletConnectionButton.tsx", "../../../app/lib/solana/utils.ts", "../../../node_modules/.pnpm/@solana+spl-token@0.4.12_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-valida_ywzmutcomzmhjcrug3w676ajpe/node_modules/@solana/spl-token/src/constants.ts"],
  "sourcesContent": ["import React from 'react';\nimport { BaseWalletMultiButton } from './BaseWalletMultiButton.js';\nimport type { ButtonProps } from './Button.js';\n\nconst LABELS = {\n    'change-wallet': 'Change wallet',\n    connecting: 'Connecting ...',\n    'copy-address': 'Copy address',\n    copied: 'Copied',\n    disconnect: 'Disconnect',\n    'has-wallet': 'Connect',\n    'no-wallet': 'Select Wallet',\n} as const;\n\nexport function WalletMultiButton(props: ButtonProps) {\n    return <BaseWalletMultiButton {...props} labels={LABELS} />;\n}\n", "import { useWallet, type Wallet } from '@solana/wallet-adapter-react';\nimport type { PublicKey } from '@solana/web3.js';\nimport { useCallback } from 'react';\n\ntype ButtonState = {\n    buttonState: 'connecting' | 'connected' | 'disconnecting' | 'has-wallet' | 'no-wallet';\n    onConnect?: () => void;\n    onDisconnect?: () => void;\n    onSelectWallet?: () => void;\n    publicKey?: PublicKey;\n    walletIcon?: Wallet['adapter']['icon'];\n    walletName?: Wallet['adapter']['name'];\n};\n\ntype Config = {\n    onSelectWallet: (config: {\n        onSelectWallet: (walletName: Wallet['adapter']['name']) => void;\n        wallets: Wallet[];\n    }) => void;\n};\n\nexport function useWalletMultiButton({ onSelectWallet }: Config): ButtonState {\n    const { connect, connected, connecting, disconnect, disconnecting, publicKey, select, wallet, wallets } =\n        useWallet();\n    let buttonState: ButtonState['buttonState'];\n    if (connecting) {\n        buttonState = 'connecting';\n    } else if (connected) {\n        buttonState = 'connected';\n    } else if (disconnecting) {\n        buttonState = 'disconnecting';\n    } else if (wallet) {\n        buttonState = 'has-wallet';\n    } else {\n        buttonState = 'no-wallet';\n    }\n    const handleConnect = useCallback(() => {\n        connect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [connect]);\n    const handleDisconnect = useCallback(() => {\n        disconnect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [disconnect]);\n    const handleSelectWallet = useCallback(() => {\n        onSelectWallet({ onSelectWallet: select, wallets });\n    }, [onSelectWallet, select, wallets]);\n    return {\n        buttonState,\n        onConnect: buttonState === 'has-wallet' ? handleConnect : undefined,\n        onDisconnect: buttonState !== 'disconnecting' && buttonState !== 'no-wallet' ? handleDisconnect : undefined,\n        onSelectWallet: handleSelectWallet,\n        publicKey: publicKey ?? undefined,\n        walletIcon: wallet?.adapter.icon,\n        walletName: wallet?.adapter.name,\n    };\n}\n", "import { useWalletMultiButton } from '@solana/wallet-adapter-base-ui';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { BaseWalletConnectionButton } from './BaseWalletConnectionButton.js';\nimport type { ButtonProps } from './Button.js';\nimport { useWalletModal } from './useWalletModal.js';\n\ntype Props = ButtonProps & {\n    labels: Omit<\n        { [TButtonState in ReturnType<typeof useWalletMultiButton>['buttonState']]: string },\n        'connected' | 'disconnecting'\n    > & {\n        'copy-address': string;\n        copied: string;\n        'change-wallet': string;\n        disconnect: string;\n    };\n};\n\nexport function BaseWalletMultiButton({ children, labels, ...props }: Props) {\n    const { setVisible: setModalVisible } = useWalletModal();\n    const { buttonState, onConnect, onDisconnect, publicKey, walletIcon, walletName } = useWalletMultiButton({\n        onSelectWallet() {\n            setModalVisible(true);\n        },\n    });\n    const [copied, setCopied] = useState(false);\n    const [menuOpen, setMenuOpen] = useState(false);\n    const ref = useRef<HTMLUListElement>(null);\n    useEffect(() => {\n        const listener = (event: MouseEvent | TouchEvent) => {\n            const node = ref.current;\n\n            // Do nothing if clicking dropdown or its descendants\n            if (!node || node.contains(event.target as Node)) return;\n\n            setMenuOpen(false);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    }, []);\n    const content = useMemo(() => {\n        if (children) {\n            return children;\n        } else if (publicKey) {\n            const base58 = publicKey.toBase58();\n            return base58.slice(0, 4) + '..' + base58.slice(-4);\n        } else if (buttonState === 'connecting' || buttonState === 'has-wallet') {\n            return labels[buttonState];\n        } else {\n            return labels['no-wallet'];\n        }\n    }, [buttonState, children, labels, publicKey]);\n    return (\n        <div className=\"wallet-adapter-dropdown\">\n            <BaseWalletConnectionButton\n                {...props}\n                aria-expanded={menuOpen}\n                style={{ pointerEvents: menuOpen ? 'none' : 'auto', ...props.style }}\n                onClick={() => {\n                    switch (buttonState) {\n                        case 'no-wallet':\n                            setModalVisible(true);\n                            break;\n                        case 'has-wallet':\n                            if (onConnect) {\n                                onConnect();\n                            }\n                            break;\n                        case 'connected':\n                            setMenuOpen(true);\n                            break;\n                    }\n                }}\n                walletIcon={walletIcon}\n                walletName={walletName}\n            >\n                {content}\n            </BaseWalletConnectionButton>\n            <ul\n                aria-label=\"dropdown-list\"\n                className={`wallet-adapter-dropdown-list ${menuOpen && 'wallet-adapter-dropdown-list-active'}`}\n                ref={ref}\n                role=\"menu\"\n            >\n                {publicKey ? (\n                    <li\n                        className=\"wallet-adapter-dropdown-list-item\"\n                        onClick={async () => {\n                            await navigator.clipboard.writeText(publicKey.toBase58());\n                            setCopied(true);\n                            setTimeout(() => setCopied(false), 400);\n                        }}\n                        role=\"menuitem\"\n                    >\n                        {copied ? labels['copied'] : labels['copy-address']}\n                    </li>\n                ) : null}\n                <li\n                    className=\"wallet-adapter-dropdown-list-item\"\n                    onClick={() => {\n                        setModalVisible(true);\n                        setMenuOpen(false);\n                    }}\n                    role=\"menuitem\"\n                >\n                    {labels['change-wallet']}\n                </li>\n                {onDisconnect ? (\n                    <li\n                        className=\"wallet-adapter-dropdown-list-item\"\n                        onClick={() => {\n                            onDisconnect();\n                            setMenuOpen(false);\n                        }}\n                        role=\"menuitem\"\n                    >\n                        {labels['disconnect']}\n                    </li>\n                ) : null}\n            </ul>\n        </div>\n    );\n}\n", "import type { WalletName } from '@solana/wallet-adapter-base';\nimport React from 'react';\nimport { Button } from './Button.js';\nimport { WalletIcon } from './WalletIcon.js';\n\ntype Props = React.ComponentProps<typeof Button> & {\n    walletIcon?: string;\n    walletName?: WalletName;\n};\n\nexport function BaseWalletConnectionButton({ walletIcon, walletName, ...props }: Props) {\n    return (\n        <Button\n            {...props}\n            className=\"wallet-adapter-button-trigger\"\n            startIcon={\n                walletIcon && walletName ? (\n                    <WalletIcon wallet={{ adapter: { icon: walletIcon, name: walletName } }} />\n                ) : undefined\n            }\n        />\n    );\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/lib/solana/utils.ts\"\n);\nimport.meta.hot.lastModified = \"1738409028328.369\";\n}\n// REMIX HMR END\n\nimport { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\"\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\"\n\nexport async function getSolanaBalance(\n  connection: Connection,\n  publicKey: PublicKey\n): Promise<number> {\n  try {\n    const balance = await connection.getBalance(publicKey)\n    return balance / LAMPORTS_PER_SOL\n  } catch (error) {\n    console.error(\"Error getting SOL balance:\", error)\n    throw error\n  }\n}\n\nexport async function getTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey\n) {\n  try {\n    const tokenAccounts = await connection.getParsedTokenAccountsByOwner(\n      publicKey,\n      {\n        programId: TOKEN_PROGRAM_ID,\n      }\n    )\n\n    return tokenAccounts.value.map((account) => {\n      const parsedInfo = account.account.data.parsed.info\n      return {\n        mint: parsedInfo.mint,\n        amount: parsedInfo.tokenAmount.uiAmount,\n        decimals: parsedInfo.tokenAmount.decimals,\n        address: account.pubkey.toBase58(),\n      }\n    })\n  } catch (error) {\n    console.error(\"Error getting token accounts:\", error)\n    throw error\n  }\n}\n\nexport async function getRecentTransactions(\n  connection: Connection,\n  publicKey: PublicKey,\n  limit = 10\n) {\n  try {\n    const signatures = await connection.getSignaturesForAddress(publicKey, {\n      limit,\n    })\n\n    const transactions = await Promise.all(\n      signatures.map(async (sig) => {\n        const tx = await connection.getParsedTransaction(sig.signature)\n        return {\n          signature: sig.signature,\n          timestamp: sig.blockTime ? new Date(sig.blockTime * 1000) : new Date(),\n          status: tx?.meta?.err ? \"failed\" : \"success\",\n          amount: tx?.meta?.postBalances[0]\n            ? (tx.meta.postBalances[0] - tx.meta.preBalances[0]) /\n              LAMPORTS_PER_SOL\n            : 0,\n        }\n      })\n    )\n\n    return transactions\n  } catch (error) {\n    console.error(\"Error getting recent transactions:\", error)\n    throw error\n  }\n}\n\nexport function shortenAddress(address: string, chars = 4): string {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`\n}\n", "import { PublicKey } from '@solana/web3.js';\n\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId: PublicKey): boolean {\n    if (programId.equals(TOKEN_PROGRAM_ID)) {\n        return false;\n    } else {\n        return true;\n    }\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "React", "React", "React"]
}
