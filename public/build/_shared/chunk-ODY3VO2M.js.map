{
  "version": 3,
  "sources": ["../../../app/components/shared/form-delete.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/shared/form-delete.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/shared/form-delete.tsx\");\n  import.meta.hot.lastModified = \"1738409028320.369\";\n}\n// REMIX HMR END\n\nimport { useFetcher, useLocation } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { IconMatch } from \"~/components/libs/icon\";\nimport { AlertDialog, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"~/components/ui/alert-dialog\";\nimport { Button } from \"~/components/ui/button\";\nimport { ButtonLoading } from \"~/components/ui/button-loading\";\nexport function FormDelete({\n  dialogTrigger,\n  action,\n  intentValue,\n  itemText,\n  name = \"id\",\n  defaultValue,\n  buttonText = \"Delete\",\n  disabled,\n  extraComponent,\n  className\n}) {\n  _s();\n  const [open, setOpen] = useState();\n  const location = useLocation();\n  const fetcher = useFetcher();\n  const isSubmitting = fetcher.state === \"submitting\" && fetcher.formMethod === \"DELETE\";\n  return <AlertDialog open={open} onOpenChange={setOpen}>\n      <AlertDialogTrigger asChild className={className}>\n        {dialogTrigger ? dialogTrigger : <Button variant=\"outline\" size=\"xs\" disabled={disabled}>\n            <IconMatch icon=\"trash\" />\n            <span>{buttonText}</span>\n          </Button>}\n      </AlertDialogTrigger>\n\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete {itemText}?</AlertDialogTitle>\n          <AlertDialogDescription>\n            This will permanently delete {itemText}. This action cannot be undone.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <fetcher.Form action={action || location.pathname} method=\"DELETE\" onSubmit={event => {\n          fetcher.submit(event.currentTarget.form, {\n            method: \"DELETE\"\n          });\n          setOpen(false);\n        }}>\n            {name && defaultValue && <input type=\"hidden\" name={name} defaultValue={defaultValue} />}\n\n            {extraComponent}\n\n            <ButtonLoading type=\"submit\" size=\"sm\" variant=\"destructive\" name=\"intent\" value={intentValue} loadingText=\"Deleting\" isLoading={isSubmitting}>\n              Delete\n            </ButtonLoading>\n          </fetcher.Form>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>;\n}\n_s(FormDelete, \"FwE8+IFQxhNYAnFmaz3RG4aQ5SM=\", false, function () {\n  return [useLocation, useFetcher];\n});\n_c = FormDelete;\nvar _c;\n$RefreshReg$(_c, \"FormDelete\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAAA,gBAAyB;AAyBb;AA9CZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4CAA8C,EAAE;AAAA,EACzF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuC;AACvC,cAAY,IAAI,eAAe;AACjC;AASO,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA,aAAa;AAAA,EACb;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,KAAG;AACH,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAS;AACjC,QAAM,WAAW,YAAY;AAC7B,QAAM,UAAU,WAAW;AAC3B,QAAM,eAAe,QAAQ,UAAU,gBAAgB,QAAQ,eAAe;AAC9E,SAAO,mDAAC,eAAY,MAAY,cAAc,SAC1C;AAAA,uDAAC,sBAAmB,SAAO,MAAC,WACzB,0BAAgB,gBAAgB,mDAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,UACjE;AAAA,yDAAC,aAAU,MAAK,WAAhB;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA,MACxB,mDAAC,UAAM,wBAAP;AAAA;AAAA;AAAA;AAAA,aAAkB;AAAA,SAFW;AAAA;AAAA;AAAA;AAAA,WAG/B,KAJJ;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAEA,mDAAC,sBACC;AAAA,yDAAC,qBACC;AAAA,2DAAC,oBAAiB;AAAA;AAAA,UAAQ;AAAA,UAAS;AAAA,aAAnC;AAAA;AAAA;AAAA;AAAA,eAAoC;AAAA,QACpC,mDAAC,0BAAuB;AAAA;AAAA,UACQ;AAAA,UAAS;AAAA,aADzC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC,qBACC;AAAA,2DAAC,qBAAkB,sBAAnB;AAAA;AAAA;AAAA;AAAA,eAAyB;AAAA,QACzB,mDAAC,QAAQ,MAAR,EAAa,QAAQ,UAAU,SAAS,UAAU,QAAO,UAAS,UAAU,WAAS;AACtF,kBAAQ,OAAO,MAAM,cAAc,MAAM;AAAA,YACvC,QAAQ;AAAA,UACV,CAAC;AACD,kBAAQ,KAAK;AAAA,QACf,GACK;AAAA,kBAAQ,gBAAgB,mDAAC,WAAM,MAAK,UAAS,MAAY,gBAAjC;AAAA;AAAA;AAAA;AAAA,iBAA6D;AAAA,UAErF;AAAA,UAED,mDAAC,iBAAc,MAAK,UAAS,MAAK,MAAK,SAAQ,eAAc,MAAK,UAAS,OAAO,aAAa,aAAY,YAAW,WAAW,cAAc,sBAA/I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,WAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,SAvBF;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,OAhCG;AAAA;AAAA;AAAA;AAAA,SAiCL;AACJ;AACA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,aAAa,UAAU;AACjC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
