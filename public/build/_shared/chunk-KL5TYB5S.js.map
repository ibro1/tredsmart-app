{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/@radix-ui+react-avatar@1.0.4_@types+react-dom@18.2.18_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/@radix-ui/react-avatar/dist/packages/react/avatar/src/index.ts", "../../../node_modules/.pnpm/@radix-ui+react-avatar@1.0.4_@types+react-dom@18.2.18_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/@radix-ui/react-avatar/dist/packages/react/avatar/src/Avatar.tsx", "../../../app/components/ui/avatar.tsx", "../../../app/utils/placeholder.ts", "../../../app/components/ui/avatar-auto.tsx"],
  "sourcesContent": ["export {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n} from './Avatar';\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps } from './Avatar';\n", "import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ElementRef<typeof Primitive.img>;\ntype PrimitiveImageProps = Radix.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ElementRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useImageLoadingStatus(src?: string) {\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n\n  useLayoutEffect(() => {\n    if (!src) {\n      setLoadingStatus('error');\n      return;\n    }\n\n    let isMounted = true;\n    const image = new window.Image();\n\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      if (!isMounted) return;\n      setLoadingStatus(status);\n    };\n\n    setLoadingStatus('loading');\n    image.onload = updateStatus('loaded');\n    image.onerror = updateStatus('error');\n    image.src = src;\n\n    return () => {\n      isMounted = false;\n    };\n  }, [src]);\n\n  return loadingStatus;\n}\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/avatar.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/avatar.tsx\");\n  import.meta.hot.lastModified = \"1738409028324.369\";\n}\n// REMIX HMR END\n\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\nimport * as React from \"react\";\nimport { cn } from \"~/utils/cn\";\nconst Avatar = React.forwardRef(_c = ({\n  className,\n  ...props\n}, ref) => <AvatarPrimitive.Root ref={ref} className={cn(\"relative flex size-8 shrink-0 select-none overflow-hidden rounded-full\", className)} {...props} />);\n_c2 = Avatar;\nAvatar.displayName = AvatarPrimitive.Root.displayName;\nconst AvatarImage = React.forwardRef(_c3 = ({\n  className,\n  ...props\n}, ref) => <AvatarPrimitive.Image ref={ref} className={cn(\"aspect-square h-full w-full\", className)} {...props} />);\n_c4 = AvatarImage;\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\nconst AvatarFallback = React.forwardRef(_c5 = ({\n  className,\n  ...props\n}, ref) => <AvatarPrimitive.Fallback ref={ref} className={cn(\"flex h-full w-full items-center justify-center rounded-full bg-muted\", className)} {...props} />);\n_c6 = AvatarFallback;\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\nexport { Avatar, AvatarFallback, AvatarImage };\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Avatar$React.forwardRef\");\n$RefreshReg$(_c2, \"Avatar\");\n$RefreshReg$(_c3, \"AvatarImage$React.forwardRef\");\n$RefreshReg$(_c4, \"AvatarImage\");\n$RefreshReg$(_c5, \"AvatarFallback$React.forwardRef\");\n$RefreshReg$(_c6, \"AvatarFallback\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/placeholder.ts\"\n);\nimport.meta.hot.lastModified = \"1738409028332.369\";\n}\n// REMIX HMR END\n\nexport function getPlaceholderAvatarUrl(username = \"username\", styleName = \"thumbs\") {\n  const url = new URL(`https://api.dicebear.com/6.x/${styleName}/svg`)\n\n  url.searchParams.append(\"seed\", username)\n  url.searchParams.append(\"flip\", String(true))\n\n  return url.toString()\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/avatar-auto.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/avatar-auto.tsx\");\n  import.meta.hot.lastModified = \"1738409028320.369\";\n}\n// REMIX HMR END\n\nimport { cva } from \"class-variance-authority\";\nimport * as React from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"~/components/ui/avatar\";\nimport { cn } from \"~/utils/cn\";\nimport { getPlaceholderAvatarUrl } from \"~/utils/placeholder\";\nimport { getNameInitials } from \"~/utils/string\";\nexport const avatarAutoVariants = cva(\"\", {\n  variants: {\n    size: {\n      xs: \"size-6\",\n      sm: \"size-8\",\n      default: \"size-12\",\n      lg: \"size-20\",\n      xl: \"size-28\"\n    }\n  },\n  compoundVariants: [{\n    size: \"xs\",\n    class: \"text-base\"\n  }, {\n    size: \"sm\",\n    class: \"text-lg\"\n  }, {\n    size: \"default\",\n    class: \"text-3xl\"\n  }, {\n    size: \"lg\",\n    class: \"text-4xl\"\n  }, {\n    size: \"xl\",\n    class: \"text-5xl\"\n  }],\n  defaultVariants: {\n    size: \"default\"\n  }\n});\n/**\n * Image URL is flexible enough to be sourced from any source:\n * - placeholder function\n * - user.images[0]?.url\n */\nexport function AvatarAuto({\n  user,\n  imageUrl,\n  size,\n  ...props\n}) {\n  return <Avatar {...props} className={cn(avatarAutoVariants({\n    size\n  }), \"bg-secondary\")}>\n      <AvatarImage src={imageUrl || getPlaceholderAvatarUrl(user.username)} alt={user.fullname} />\n\n      {!imageUrl && <AvatarFallback>{getNameInitials(user.fullname)}</AvatarFallback>}\n    </Avatar>;\n}\n_c = AvatarAuto;\nvar _c;\n$RefreshReg$(_c, \"AvatarAuto\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["AVATAR_NAME", "createAvatarContext", "createAvatarScope", "createContextScope", "AvatarProvider", "useAvatarContext", "Avatar", "React", "props", "forwardedRef", "avatarProps", "imageLoadingStatus", "setImageLoadingStatus", "$8NyvN$createElement", "__scopeAvatar", "IMAGE_NAME", "AvatarImage", "React", "props", "forwardedRef", "imageProps", "context", "useAvatarContext", "__scopeAvatar", "imageLoadingStatus", "useImageLoadingStatus", "src", "handleLoadingStatusChange", "useCallbackRef", "status", "onLoadingStatusChange", "onImageLoadingStatusChange", "useLayoutEffect", "$8NyvN$createElement", "FALLBACK_NAME", "AvatarFallback", "React", "props", "forwardedRef", "fallbackProps", "context", "useAvatarContext", "__scopeAvatar", "canRender", "setCanRender", "delayMs", "undefined", "timerId", "window", "setTimeout", "clearTimeout", "imageLoadingStatus", "$8NyvN$createElement", "useImageLoadingStatus", "src", "loadingStatus", "setLoadingStatus", "React", "useLayoutEffect", "isMounted", "image", "window", "Image", "updateStatus", "status", "onload", "onerror", "Root", "Avatar", "AvatarImage", "Fallback", "AvatarFallback", "import_jsx_dev_runtime", "_c"]
}
