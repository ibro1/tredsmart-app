{
  "version": 3,
  "sources": ["../../../app/components/ui/button-link.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/button-link.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/button-link.tsx\");\n  import.meta.hot.lastModified = \"1738409028324.369\";\n}\n// REMIX HMR END\n\nimport { Link } from \"@remix-run/react\";\nimport { Button, buttonVariants } from \"~/components/ui/button\";\nimport { cn } from \"~/utils/cn\";\nconst ButtonLink = ({\n  variant = \"default\",\n  size = \"default\",\n  className,\n  children,\n  disabled,\n  ...props\n}) => {\n  return <Link className={cn(buttonVariants({\n    variant,\n    size,\n    className\n  }), disabled && \"pointer-events-none opacity-50\")} {...props}>\n      {children}\n    </Link>;\n};\n_c = ButtonLink;\nButtonLink.displayName = \"ButtonLink\";\nconst ButtonNavLink = ({\n  variant = \"default\",\n  size = \"default\",\n  className,\n  children,\n  ...props\n}) => {\n  return <Link className={cn(buttonVariants({\n    variant,\n    size,\n    className\n  }))} {...props}>\n      {children}\n    </Link>;\n};\n_c2 = ButtonNavLink;\nButtonNavLink.displayName = \"ButtonNavLink\";\nfunction ButtonChildLink({\n  ...props\n}) {\n  return <Button asChild>\n      <Link {...props}>Back to Home</Link>\n    </Button>;\n}\n_c3 = ButtonChildLink;\nexport { ButtonChildLink, ButtonLink, ButtonNavLink };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ButtonLink\");\n$RefreshReg$(_c2, \"ButtonNavLink\");\n$RefreshReg$(_c3, \"ButtonChildLink\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AA+BS;AA9BT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,wCAA0C,EAAE;AAAA,EACrF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAmC;AACnC,cAAY,IAAI,eAAe;AACjC;AAMA,IAAM,aAAa,CAAC;AAAA,EAClB,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAM;AACJ,SAAO,mDAAC,QAAK,WAAW,GAAG,eAAe;AAAA,IACxC;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,GAAG,YAAY,gCAAgC,GAAI,GAAG,OAClD,YALE;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,KAAK;AACL,WAAW,cAAc;AACzB,IAAM,gBAAgB,CAAC;AAAA,EACrB,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAM;AACJ,SAAO,mDAAC,QAAK,WAAW,GAAG,eAAe;AAAA,IACxC;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,CAAC,GAAI,GAAG,OACJ,YALE;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,MAAM;AACN,cAAc,cAAc;AAC5B,SAAS,gBAAgB;AAAA,EACvB,GAAG;AACL,GAAG;AACD,SAAO,mDAAC,UAAO,SAAO,MAClB,6DAAC,QAAM,GAAG,OAAO,4BAAjB;AAAA;AAAA;AAAA;AAAA,SAA6B,KAD1B;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,MAAM;AAEN,IAAI;AAAJ,IAAQ;AAAR,IAAa;AACb,aAAa,IAAI,YAAY;AAC7B,aAAa,KAAK,eAAe;AACjC,aAAa,KAAK,iBAAiB;AAEnC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
