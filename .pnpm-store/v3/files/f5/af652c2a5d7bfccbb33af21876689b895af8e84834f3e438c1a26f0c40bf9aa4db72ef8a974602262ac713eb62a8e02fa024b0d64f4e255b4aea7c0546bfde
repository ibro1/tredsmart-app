import { timerify } from '../../util/Performance.js';
import { hasDependency, load } from '../../util/plugin.js';
export const NAME = 'Semantic Release';
export const ENABLERS = ['semantic-release'];
export const PACKAGE_JSON_PATH = 'release';
export const isEnabled = ({ dependencies }) => hasDependency(dependencies, ENABLERS);
export const CONFIG_FILE_PATTERNS = [
    '.releaserc',
    '.releaserc.{yaml,yml,json,js,cjs}',
    'release.config.{js,cjs}',
    'package.json',
];
const findSemanticReleaseDependencies = async (configFilePath, options) => {
    const { manifest, isProduction } = options;
    if (isProduction)
        return [];
    const localConfig = configFilePath.endsWith('package.json')
        ? manifest[PACKAGE_JSON_PATH]
        : await load(configFilePath);
    const plugins = (localConfig?.plugins ?? []).map(plugin => (Array.isArray(plugin) ? plugin[0] : plugin));
    return plugins;
};
export const findDependencies = timerify(findSemanticReleaseDependencies);
