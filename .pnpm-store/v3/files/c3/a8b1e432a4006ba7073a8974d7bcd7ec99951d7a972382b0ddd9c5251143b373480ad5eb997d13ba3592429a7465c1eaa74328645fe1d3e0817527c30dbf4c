import { Hub } from '@sentry/node';
import { Transaction, TransactionSource } from '@sentry/types';
import { DataFunctionArgs, ReactRouterDomPkg, ServerBuild, ServerRoute, ServerRouteManifest } from './vendor/types';
/**
 * Sentry utility to be used in place of `handleError` function of Remix v2
 * Remix Docs: https://remix.run/docs/en/main/file-conventions/entry.server#handleerror
 *
 * Should be used in `entry.server` like:
 *
 * export const handleError = Sentry.wrapRemixHandleError
 */
export declare function wrapRemixHandleError(err: unknown, { request }: DataFunctionArgs): void;
/**
 * Captures an exception happened in the Remix server.
 *
 * @param err The error to capture.
 * @param name The name of the origin function.
 * @param request The request object.
 *
 * @returns A promise that resolves when the exception is captured.
 */
export declare function captureRemixServerException(err: unknown, name: string, request: Request): Promise<void>;
/**
 * Creates routes from the server route manifest
 *
 * @param manifest
 * @param parentId
 */
export declare function createRoutes(manifest: ServerRouteManifest, parentId?: string): ServerRoute[];
/**
 * Starts a new transaction for the given request to be used by different `RequestHandler` wrappers.
 *
 * @param request
 * @param routes
 * @param pkg
 */
export declare function startRequestHandlerTransaction(hub: Hub, name: string, source: TransactionSource, request: {
    headers: {
        'sentry-trace': string;
        baggage: string;
    };
    method: string;
}): Transaction;
/**
 * Get transaction name from routes and url
 */
export declare function getTransactionName(routes: ServerRoute[], url: URL, pkg?: ReactRouterDomPkg): [
    string,
    TransactionSource
];
/**
 * Instruments `remix` ServerBuild for performance tracing and error tracking.
 */
export declare function instrumentBuild(build: ServerBuild, manuallyInstrumented?: boolean): ServerBuild;
/**
 * Monkey-patch Remix's `createRequestHandler` from `@remix-run/server-runtime`
 * which Remix Adapters (https://remix.run/docs/en/v1/api/remix) use underneath.
 */
export declare function instrumentServer(): void;
//# sourceMappingURL=instrumentServer.d.ts.map
