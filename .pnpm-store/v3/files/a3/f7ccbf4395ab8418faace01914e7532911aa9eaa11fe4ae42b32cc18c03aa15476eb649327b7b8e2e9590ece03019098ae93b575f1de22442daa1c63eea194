import { timerify } from '../../util/Performance.js';
import { hasDependency, load } from '../../util/plugin.js';
export const NAME = 'PostCSS';
export const ENABLERS = ['postcss', 'next'];
export const isEnabled = ({ dependencies }) => hasDependency(dependencies, ENABLERS);
export const CONFIG_FILE_PATTERNS = ['postcss.config.{cjs,js}', 'postcss.config.json', 'package.json'];
const findPostCSSDependencies = async (configFilePath, options) => {
    const { manifest, isProduction } = options;
    if (isProduction)
        return [];
    const localConfig = configFilePath.endsWith('package.json')
        ? manifest?.postcss
        : await load(configFilePath);
    if (!localConfig)
        return [];
    return localConfig.plugins
        ? (Array.isArray(localConfig.plugins) ? localConfig.plugins : Object.keys(localConfig.plugins)).flatMap(plugin => {
            if (typeof plugin === 'string')
                return plugin;
            if (Array.isArray(plugin) && typeof plugin[0] === 'string')
                return plugin[0];
            return [];
        })
        : [];
};
export const findDependencies = timerify(findPostCSSDependencies);
