import { hasDependency } from '../../util/plugin.js';
import { toEntryPattern, toProductionEntryPattern } from '../../util/protocols.js';
export const NAME = 'Astro';
export const ENABLERS = ['astro'];
export const isEnabled = ({ dependencies }) => hasDependency(dependencies, ENABLERS);
export const ENTRY_FILE_PATTERNS = ['astro.config.{js,cjs,mjs,ts}', 'src/content/config.ts'];
export const PRODUCTION_ENTRY_FILE_PATTERNS = ['src/pages/**/*.{astro,mdx,js,ts}', 'src/content/**/*.mdx'];
export const findDependencies = async (configFilePath, options) => {
    const { config, manifest, isProduction } = options;
    const dependencies = config.entry
        ? config.entry.map(toProductionEntryPattern)
        : [...ENTRY_FILE_PATTERNS.map(toEntryPattern), ...PRODUCTION_ENTRY_FILE_PATTERNS.map(toProductionEntryPattern)];
    if (!isProduction &&
        manifest.scripts &&
        Object.values(manifest.scripts).some(script => /astro (--.+ )?check/.test(script))) {
        dependencies.push('@astrojs/check');
    }
    return dependencies;
};
